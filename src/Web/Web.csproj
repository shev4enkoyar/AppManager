<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <RootNamespace>AppManager.Web</RootNamespace>
    <AssemblyName>AppManager.Web</AssemblyName>
    <Version>1.0.0</Version>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Application\Application.csproj"/>
    <ProjectReference Include="..\Infrastructure\Infrastructure.csproj"/>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="8.0.6"/>
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="8.0.6"/>
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.6"/>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.6">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" Version="8.0.6"/>
    <PackageReference Include="NSwag.AspNetCore" Version="14.0.8" />
    <PackageReference Include="NSwag.MSBuild" Version="14.0.8">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="FluentValidation.AspNetCore" Version="11.3.0"/>
    <PackageReference Include="tusdotnet" Version="2.8.0"/>
  </ItemGroup>

  <ItemGroup>
    <_ContentIncludedByDefault Remove="Pages\Error.cshtml"/>
    <_ContentIncludedByDefault Remove="Pages\Shared\_LoginPartial.cshtml"/>
    <_ContentIncludedByDefault Remove="Pages\_ViewImports.cshtml"/>
  </ItemGroup>

  <ItemGroup>
    <Content Include="..\..\.dockerignore">
      <Link>.dockerignore</Link>
    </Content>
  </ItemGroup>


  <!-- Auto-generated Open API specification and Angular TypeScript clients -->
  <PropertyGroup>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DocumentationFile></DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DocumentationFile></DocumentationFile>
  </PropertyGroup>

  <Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' And '$(SkipNSwag)' != 'True' ">
    <Exec ConsoleToMSBuild="true" ContinueOnError="true" WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" Command="$(NSwagExe_Net80) run config.nswag /variables:Configuration=$(Configuration)">
      <Output TaskParameter="ExitCode" PropertyName="NSwagExitCode"/>
      <Output TaskParameter="ConsoleOutput" PropertyName="NSwagOutput"/>
    </Exec>

    <Message Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' == '0'" Importance="low"/>
    <Error Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' != '0'"/>
  </Target>

</Project>
